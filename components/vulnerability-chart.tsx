"use client"

import type { ScanResult } from "@/app/page"

interface VulnerabilityChartProps {
  scanResults: ScanResult[]
}

export function VulnerabilityChart({ scanResults }: VulnerabilityChartProps) {
  // Simple bar chart representation
  const maxVulns = Math.max(...scanResults.map((scan) => scan.totalVulnerabilities), 1)

  return (
    <div className="space-y-4">
      {scanResults.slice(0, 5).map((scan, index) => (
        <div key={scan.id} className="space-y-2">
          <div className="flex items-center justify-between text-sm">
            <span className="font-medium">
              {new Date(scan.timestamp).toLocaleDateString()} - {scan.branch}
            </span>
            <span className="text-muted-foreground">{scan.totalVulnerabilities} issues</span>
          </div>
          <div className="flex space-x-1 h-6">
            <div
              className="bg-red-500 rounded-sm"
              style={{ width: `${(scan.criticalCount / maxVulns) * 100}%` }}
              title={`${scan.criticalCount} critical`}
            />
            <div
              className="bg-orange-500 rounded-sm"
              style={{ width: `${(scan.highCount / maxVulns) * 100}%` }}
              title={`${scan.highCount} high`}
            />
            <div
              className="bg-yellow-500 rounded-sm"
              style={{ width: `${(scan.mediumCount / maxVulns) * 100}%` }}
              title={`${scan.mediumCount} medium`}
            />
            <div
              className="bg-green-500 rounded-sm"
              style={{ width: `${(scan.lowCount / maxVulns) * 100}%` }}
              title={`${scan.lowCount} low`}
            />
          </div>
        </div>
      ))}
    </div>
  )
}
